@if (!AuthorizedFor(NKD.Permissions.ManageProjects)) {Html.RenderAction("UnauthorizedRedirect");}
@using (new TransactionScope(TransactionScopeOption.Suppress))
{

    Html.DevExpress().GridView(
        settings =>
        {
            settings.Name = "gvDataBindingToLinq";
            settings.CallbackRouteValues = new { area = "NKD", Controller = "User", Action = "ModelListPartial" };
            //settings.SettingsEditing.AddNewRowRouteValues = new { area = "NKD", Controller = "User", Action = "ProjectListNewPartial" };
            //settings.SettingsEditing.UpdateRowRouteValues = new { area = "NKD", Controller = "User", Action = "InlineEditingUpdatePartial" };
            //settings.SettingsEditing.DeleteRowRouteValues = new { area = "NKD", Controller = "User", Action = "InlineEditingDeletePartial" };
                
            settings.KeyFieldName = "BlockModelID";
            settings.Width = Unit.Percentage(100);

            settings.Settings.ShowFilterRow = true;
            settings.Settings.ShowGroupPanel = false;
            settings.Settings.ShowFooter = true;
            settings.SettingsEditing.Mode = GridViewEditingMode.EditFormAndDisplayRow;
            settings.SettingsBehavior.ConfirmDelete = true;


            settings.Columns.Add("BlockModelID").Visible = false;
            settings.Columns.Add("ProjectName");
            settings.Columns.Add("Alias");
            settings.Columns.Add("ModelStage");
            settings.Columns.Add("Filename");
            settings.Columns.Add("Uploaded");
            settings.Columns.Add("HasSubcells");
            settings.Columns.Add("AuthorName");
            settings.Columns.Add("ApproverName");
            settings.Columns.Add("ExternalReviewerName").Visible = false;
            settings.Columns.Add("Comment").Visible = false;

            settings.Columns.Add(column =>
            {
                column.Caption = "#";
                column.SetDataItemTemplateContent(c =>
                {
                    ViewContext.Writer.Write(                         
                        (DataBinder.Eval(c.DataItem, "ApproverName") == null ? Html.ActionLink("Append", "AppendToModel", new { id = DataBinder.Eval(c.DataItem, "BlockModelID") }) + "&nbsp;" + Html.ActionLink("Delete", "DeleteModel", new { id = DataBinder.Eval(c.DataItem, "BlockModelID"), verb = "delete" }, new { onclick = "return confirm('Do you really want to delete this record?')" }) : null)                       
                        //TODO: + "&nbsp;CSV&nbsp;RPT" 
                        //+ "&nbsp;" + Html.ActionLink("Edit", "EditModel", new { id = DataBinder.Eval(c.DataItem, "BlockModelID")})
                    );
                });
                column.SetHeaderTemplateContent(c =>
                {
                    ViewContext.Writer.Write(
                        Html.ActionLink("New", "ImportModel", new { id = "" }).ToHtmlString()
                    );
                });
                column.Settings.AllowDragDrop = DefaultBoolean.False;
                column.Settings.AllowSort = DefaultBoolean.False;
                column.Width = 70;
            });

            settings.ClientSideEvents.BeginCallback = "function(s, e) { OnStartCallback(s, e); }";
            settings.ClientSideEvents.EndCallback = "function(s, e) { OnEndCallback(s, e); }";

        })
        //.Bind(Model.Projects)
        .BindToLINQ(string.Empty, string.Empty, (s, e) =>
        {
            var d = new NKD.Models.ModelsDataContext();
            e.QueryableSource = d.ModelStatus;
            e.KeyExpression = "BlockModelID";
        })
        .GetHtml();
}
